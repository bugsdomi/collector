height="72px"


position: absolute;
height: 175px;
left: -0.28%;
right: 0%;
top: 13px;

font-family: Montserrat;
font-style: normal;
font-weight: normal;
line-height: normal;
font-size: 36px;
text-align: center;

color: #FAFE30;

border: 2px solid #000000;


style="font-family: 'Montserrat', sans-serif; color: #FAFE30; text-shadow: 2px 2px #000000;
style="color: #FAFE30; text-shadow: 2px 2px #000000;

a.dropdown-item
font-weight-normal



    <nav class="navbar navbar-expand-lg fixed-top navbar-dark">
        <a class="navbar-brand p-0" target="_top"><img src="static/images/favicon.png" height="40">
            <span class="lead txt-yellow-stroke"> Collect'Or - Réseau Social dédiés aux collectionneurs de sujets militaires</span>
        </a>

        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        
        <!-- <div class="collapse navbar-collapse" id="navbarSupportedContent"> -->
        <div id="navbarSupportedContent">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item mx-1">



    <!-- <li class="nav-item mx-1">
    <a class="nav-link" href="static/icons.html">Profil </a>
</li>
<li class="nav-item mx-1">
    <a class="nav-link" href="documentation.html">Documentation</a>
</li>
<li class="nav-item ml-1 mr-3">
    <a class="nav-link" href="mailto:hello@getreplacer.com">Support </a>
</li>
<li class="nav-item">
    <a class="btn mr-2 btn-light" id="buy-button" href="https://themes.getbootstrap.com/product/replacer-2/">Purchase</a>
</li> -->






Annonces
    ventes / échange
    recherche
manifestations
Avis
Gallerie
Trucs et Astuces
Expériences
Questions
Breaking news









body {
    font-family: 'Roboto', sans-serif;
}

/* carousel fullscreen */
.carousel-fullscreen .carousel-inner .carousel-item {
    height: 100vh;
    min-height: 600px;
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
}

/* carousel fullscreen - vertically centered caption*/
.carousel-fullscreen .carousel-caption {
    top: 50%;
    bottom: auto;
    transform: translateY(-50%);
}








socketIo.on('visiteurLoginData', function(webSocketConnection){                        // Une connexion au serveur vient d être faite
    vNbrConnectionsAlive++;                                                     // Nombre de visiteurs ou membres 
    
    
    let vCurrentPlayerInSession=-1;                                             // No de joueur courant validé dans la partie
    console.log('--------------------------------------------------------------------------------------------------------------------')
    console.log('Connection : Nombre de visiteurs : ', vNbrConnectionsAlive);


/* overlay for better readibility of the caption  */
.overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    background: #000;
    opacity: 0.3;
    transition: all 0.2s ease-out;
}

.carousel .carousel-item {
    transition-duration: 1.5s;
}

.carousel-indicators li {
    display: inline-block;
    width: 18px;
    height: 18px;
    margin:6px;
    text-indent: 0;
    cursor: pointer;
    border: none;
    border-radius: 50%;
    background-color: grey;
    box-shadow: inset 1px 1px 1px 1px rgba(0,0,0,0.5);    
}
.carousel-indicators .active {
    /* width: 24px;
    height: 24px;
    margin: 10px; */
    background-color: #ffff99;
}

/* demo typography */
h1,
h2,
h3,
h4 {
    font-weight: 700;
}

@media (max-width: 767.98px) {
    .display-1 {
        font-size: 3.3rem;
    }
    .display-2 {
        font-size: 2.5rem;
    }
    .display-3 {
        font-size: 2rem;
    }



                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-success" data-dismiss="modal">Fermer</button>
                </div>

class="carousel-caption"
lead
data-dismiss='modal'




    // ------------------------------------------------------------
    // Ajout des données du visiteur (futur membre) (Email, Pseudo, 
    // MDP, timestamp (au format brut), et statut dans la BDD)
    // ATTENTION !!!!
    // S'il n'y aucun memebre dans la BDD, le Premier membre qui est créé
    // est le Super-Administrateur
    // Codification des privilèges
    // 1 --> Super-Admin
    // 2 --> Admin
    // 4 --> Membre
    // ------------------------------------------------------------
    PlayersServer.prototype.addMemberInDatabase = function(pQuery){
console.log('addMemberInDatabase - pQuery : ',pQuery)

console.log('Count : ',vDBMgr.memberCollection.count()
        // let playerRecord = 
        // {
        //     pseudo: pPseudo,
        //     nbrWonParties : 0,                  // Nbre de parties gagnées
        //     nbrLostParties : 0,                 // Nbre de parties perdues
        //     totalPlayedTime : 0,                // temps total de jeu
        //     totalPoints : 0,                    // Nbre total de points du joueur
        //     ranking : 0,                        // Classement du joueur en fonction de ses points
        // }
        // vDBMgr.memberCollection.insert(playerRecord);

        // this.objectPlayer['player'+ this.currentPlayer].pseudo = playerRecord.pseudo;                                        
        // this.objectPlayer['player'+ this.currentPlayer].nbrWonParties = playerRecord.nbrWonParties;
        // this.objectPlayer['player'+ this.currentPlayer].nbrLostParties =  playerRecord.nbrLostParties;                                       
        // this.objectPlayer['player'+ this.currentPlayer].totalPlayedTime = playerRecord.totalPlayedTime;                                      
        // this.objectPlayer['player'+ this.currentPlayer].totalPoints = playerRecord.totalPoints;
        // this.objectPlayer['player'+ this.currentPlayer].ranking = playerRecord.ranking;    

    }

    // ------------------------------------------------------------
    PlayersServer.prototype.findDataInDB = function(pQuery, pResolveProc, pRejectProc, pWebSocketConnection){
console.log('findDataInDB - pQuery : ',pQuery)
        vDBMgr.memberCollection.find(pQuery).toArray((error, documents) => {
            if (error) {
                console.log('Erreur d\'accès à la collection',error);   // Si erreur technique...
            } else {
                if (!documents.length){
                    pWebSocketConnection.emit(pRejectProc); 
                } else {                          
                    pWebSocketConnection.emit(pResolveProc); 
                }
            }
        });
    }
    // ------------------------------------------------------------
    // Vérification des données du visiteur (Pseudo + MDP) :
    // Oncherche la combinaison Pseudo et MDP
    // - Si la combinaison n'existe pas --> Rejet de la demande Login ('retryLoginForm')
    // - Par contre, si elle existe, on demande au client de désactiver 
    // l'icône de Login et d'activer l'icône de déconnexion ('disableConnectBtn')
    // ------------------------------------------------------------
    PlayersServer.prototype.checkVisitorIsMember = function(pVisiteurLoginData, pWebSocketConnection){
        this.findDataInDB({ 
            "pseudo": pVisiteurLoginData.pseudo, 
            "password": pVisiteurLoginData.password, 
        }, 
        'disableConnectBtn',
        'retryLoginForm', 
        pWebSocketConnection);
    }
    // ------------------------------------------------------------
    // Vérification des données de Sign-in du visiteur  :
    // 1) Vérification de la non-préexistence de l'Email
    // 2) Vérification de la non-préexistence du Pseudo
    // Si ces 2 conditions sont vérifiées, on ajoute le visiteur à 
    // la BDD et il devient membre
    // - Sinon, on le rejette 
    // ------------------------------------------------------------
    PlayersServer.prototype.checkVisitorSignInValid = function(pVisiteurSignInData, pWebSocketConnection){
        vDBMgr.memberCollection.find(
        { 
            "email": pVisiteurSignInData.email, 
        }).toArray((error, documents) => {
            if (!documents.length){                            // Si email non trouvé --> Ok pour l'instant, donc on vérifie que le Pseudo n'existe pas
                vDBMgr.memberCollection.find(
                { 
                    "pseudo": pVisiteurSignInData.pseudo, 
                }).toArray((error, documents) => {
                    if (!documents.length){                     // Si pseudo non trouvé --> On valide l'inscription en créant le membre
                        this.addMemberInDatabase(pVisiteurSignInData);
                    } else {
                        pWebSocketConnection.emit('retrySignInForm'); 
                    }
                });
            } else {
                pWebSocketConnection.emit('retrySignInForm'); 
            }
        });
    }
// -----------------------------------------------------------------------------------
}



